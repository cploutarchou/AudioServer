version: '3'
services:
  ## Router
  router01:
    image: mongo:4.4
    container_name: router-01
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017,configsvr03:27017 --bind_ip_all
    ports:
      - 27017:27017
    volumes:
      - ./scripts/mongo:/scripts
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.11
  router02:
    image: mongo:4.4
    container_name: router-02
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017,configsvr03:27017 --bind_ip_all
    volumes:
      - ./scripts/mongo:/scripts
    ports:
      - 27018:27017
    links:
      - router01
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.12


  ## Config Servers
  configsvr01:
    image: mongo:4.4
    container_name: mongo-config-01
    command: mongod --port 27017 --configsvr --replSet rs-config-server --dbpath /data/db
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/configsvr01:/data/db
    ports:
      - 27019:27017
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.13
    links:
      - shard01-a
      - shard02-a
      - shard03-a
  configsvr02:
    image: mongo:4.4
    container_name: mongo-config-02
    command: mongod --port 27017 --configsvr --replSet rs-config-server --dbpath /data/db
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/configsvr02:/data/db
    ports:
      - 27020:27017
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.14
    links:
      - configsvr01
  configsvr03:
    image: mongo:4.4
    container_name: mongo-config-03
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/configsvr03:/data/db
    ports:
      - 27021:27017
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.15
    links:
      - configsvr02

  ## Shards
  ## Shards 01

  shard01-a:
    image: mongo:4.4
    container_name: shard-01-node-a
    command: mongod --port 27017 --shardsvr --replSet shard01
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/shard01-a:/data/db
    ports:
      - 27022:27017
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.16
    links:
      - shard01-b
      - shard01-c
  shard01-b:
    image: mongo:4.4
    container_name: shard-01-node-b
    command: mongod --port 27017 --shardsvr --replSet shard01
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/shard01-b:/data/db
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.17
    ports:
      - 27023:27017
  shard01-c:
    image: mongo:4.4
    container_name: shard-01-node-c
    command: mongod --port 27017 --shardsvr --replSet shard01
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/shard01-c:/data/db
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.18
    ports:
      - 27024:27017

  ## Shards 02
  shard02-a:
    image: mongo:4.4
    container_name: shard-02-node-a
    command: mongod --port 27017 --shardsvr --replSet shard02
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/shard02-a:/data/db
    ports:
      - 27025:27017
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.19
    links:
      - shard02-b
      - shard02-c
  shard02-b:
    image: mongo:4.4
    container_name: shard-02-node-b
    command: mongod --port 27017 --shardsvr --replSet shard02
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/shard02-b:/data/db
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.20
    ports:
      - 27026:27017
  shard02-c:
    image: mongo:4.4
    container_name: shard-02-node-c
    command: mongod --port 27017 --shardsvr --replSet shard02
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/shard02-c:/data/db
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.21
    ports:
      - 27027:27017

  ## Shards 03
  shard03-a:
    image: mongo:4.4
    container_name: shard-03-node-a
    command: mongod --port 27017 --shardsvr --replSet shard03
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/shard03-a:/data/db
    ports:
      - 27028:27017
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.22
    links:
      - shard03-b
      - shard03-c
  shard03-b:
    image: mongo:4.4
    container_name: shard-03-node-b
    command: mongod --port 27017 --shardsvr --replSet shard03
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/shard03-b:/data/db
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.23
    ports:
      - 27029:27017
  shard03-c:
    image: mongo:4.4
    container_name: shard-03-node-c
    command: mongod --port 27017 --shardsvr --replSet shard03
    volumes:
      - ./scripts/mongo:/scripts
      - /mongo_cluster/shard03-c:/data/db
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.24
    ports:
      - 27030:27017
  flask:
    build: .
    ports:
      - 5000:5000
    expose:
      - 5000
    env_file:
      - sample.env
    links:
      - router01
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.25

  nginx:
    image: nginx:1.19.6-alpine
    container_name : nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
    depends_on:
      - flask
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.26

  mongodb:
    image: mongo:4.4
    volumes:
      - mongo_data:/data/db
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.50
    ports:
      - 27080:27017
    # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - http.host=172.21.0.60
      - transport.host=localhost
      - network.host=172.21.0.60
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.60
  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:4.0
    volumes:
      - graylog_data:/usr/share/graylog/data
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://172.21.0.35:9000/
      - DISABLE_TELEMETRY=1
      - GRAYLOG_ELASTICSEARCH_CLUSTER_NAME=elasticsearch
      - GRAYLOG_MONGODB_SERVICE_NAME_PORT=mongodb
      - GRAYLOG_MONGODB_URI=mongodb://172.21.0.50:27017/graylog
      - GRAYLOG_MONGODB_BIND_PORT=27080
      - GRAYLOG_MONGODB_BIND_IP=172.21.0.50
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    networks:
      audioserver-dev-env:
        ipv4_address: 172.21.0.35
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      # Containers should only listen on 127.0.0.1, Apache is our TLS proxy
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      # - 1514:1514
      # Syslog UDP
      # - 1514:1514/udp
      # GELF TCP
      # - 12201:12201
      # GELF UDP
      # - 12201:12201/udp
      # GELF HTTP
      - 12202:12202

volumes:
  mongo_cluster:
  mongo_data:
  es_data:
  graylog_data:
networks:
  audioserver-dev-env:
    name: WebServerInfrastructure
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16